<Windows:UIComponentBase
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:Core="clr-namespace:FoxTunes;assembly=FoxTunes.Core" 
        xmlns:Windows="clr-namespace:FoxTunes" 
        xmlns:ViewModel="clr-namespace:FoxTunes.ViewModel"
        xmlns:Interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        x:Class="FoxTunes.PlaylistSelectorList"
        mc:Ignorable="d">
    <Windows:UIComponentBase.Resources>
        <ViewModel:PlaylistSelector x:Key="ViewModel"></ViewModel:PlaylistSelector>
    </Windows:UIComponentBase.Resources>
    <Windows:UIComponentBase.ContextMenu>
        <Windows:Menu Category="{Binding Source={x:Static Core:InvocationComponent.CATEGORY_PLAYLISTS}}"></Windows:Menu>
    </Windows:UIComponentBase.ContextMenu>
    <ListBox 
        ItemsSource="{Binding Items, Source={StaticResource ViewModel}, IsAsync=True}" 
        SelectedValue="{Binding SelectedItem, Source={StaticResource ViewModel}}">
        <ListBox.ContextMenu>
            <Windows:Menu Category="{Binding Source={x:Static Core:InvocationComponent.CATEGORY_PLAYLISTS}}"></Windows:Menu>
        </ListBox.ContextMenu>
        <ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
            </Style>
        </ListBox.ItemContainerStyle>
        <ListBox.ItemTemplate>
            <DataTemplate DataType="{x:Type Core:Playlist}">
                <Grid IsHitTestVisible="True" Background="Transparent">
                    <Interactivity:Interaction.Triggers>
                        <Interactivity:EventTrigger EventName="MouseDown">
                            <Interactivity:InvokeCommandAction Command="{Binding PlaylistSelectedCommand, Source={StaticResource ViewModel}}"/>
                        </Interactivity:EventTrigger>
                    </Interactivity:Interaction.Triggers>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding Name}" Foreground="{DynamicResource TextBrush}"></TextBlock>
                    <Button Grid.Column="1" Name="UpButton" Visibility="Hidden" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Command="{Binding MoveUpCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding}">↑</Button>
                    <Button Grid.Column="2" Name="DownButton" Visibility="Hidden" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Command="{Binding MoveDownCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding}">↓</Button>
                </Grid>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="UpButton" Property="Visibility" Value="Visible"></Setter>
                        <Setter TargetName="DownButton" Property="Visibility" Value="Visible"></Setter>
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ListBox.ItemTemplate>
    </ListBox>
</Windows:UIComponentBase>
